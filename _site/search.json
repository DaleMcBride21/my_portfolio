[
  {
    "objectID": "story_telling.html",
    "href": "story_telling.html",
    "title": "About Me",
    "section": "",
    "text": "Introduction\n\nMy name is Dale McBride, I am from a small town in Wyoming called Otto. I have always been interested in computers and have chosen to study Computer Science.\nI have always been active in Student Council as well as sports my entire life. Basketball is my favorite, but I also liked Football and Track.\nSome of my other interests are hunting and fishing. Generally, if it is outdoors I will like to do it.\n\nMarkDown Basics\n\n\n\n\n Back to top"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "DS250 Projects",
    "section": "",
    "text": "Project 1\nProject 2\nProject 3\nProject 4\nProject 5"
  },
  {
    "objectID": "projects.html#repo-for-all-my-projects",
    "href": "projects.html#repo-for-all-my-projects",
    "title": "DS250 Projects",
    "section": "",
    "text": "Project 1\nProject 2\nProject 3\nProject 4\nProject 5"
  },
  {
    "objectID": "Projects/project4.html",
    "href": "Projects/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "paste your elevator pitch here A SHORT (4-5 SENTENCES) PARAGRAPH THAT DESCRIBES KEY INSIGHTS TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS.\n\nHighlight the Questions and Tasks"
  },
  {
    "objectID": "Projects/project4.html#elevator-pitch",
    "href": "Projects/project4.html#elevator-pitch",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "paste your elevator pitch here A SHORT (4-5 SENTENCES) PARAGRAPH THAT DESCRIBES KEY INSIGHTS TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS.\n\nHighlight the Questions and Tasks"
  },
  {
    "objectID": "Projects/project4.html#questiontask-1",
    "href": "Projects/project4.html#questiontask-1",
    "title": "Client Report - [Insert Project Title]",
    "section": "QUESTION|TASK 1",
    "text": "QUESTION|TASK 1\nCOPY PASTE QUESTION|TASK 1 FROM THE PROJECT HERE\ntype your results and analysis here\n\ninclude figures in chunks and discuss your findings in the figure."
  },
  {
    "objectID": "Projects/project4.html#questiontask-2",
    "href": "Projects/project4.html#questiontask-2",
    "title": "Client Report - [Insert Project Title]",
    "section": "QUESTION|TASK 2",
    "text": "QUESTION|TASK 2\nCOPY PASTE QUESTION|TASK 2 FROM THE PROJECT HERE\ntype your results and analysis here\n\ninclude figures in chunks and discuss your findings in the figure."
  },
  {
    "objectID": "Projects/project4.html#questiontask-3",
    "href": "Projects/project4.html#questiontask-3",
    "title": "Client Report - [Insert Project Title]",
    "section": "QUESTION|TASK 3",
    "text": "QUESTION|TASK 3\nCOPY PASTE QUESTION|TASK 3 FROM THE PROJECT HERE\ntype your results and analysis here\n\ninclude figures in chunks and discuss your findings in the figure."
  },
  {
    "objectID": "Projects/project2.html",
    "href": "Projects/project2.html",
    "title": "Client Report - Project 2",
    "section": "",
    "text": "paste your elevator pitch here A SHORT (4-5 SENTENCES) PARAGRAPH THAT DESCRIBES KEY INSIGHTS TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS.\n\n\nRead and format project data\n# Include and execute your code here\ndf = pd.read_json(\"https://raw.githubusercontent.com/byuidatascience/data4missing/master/data-raw/flights_missing/flights_missing.json\")\n\n\nHighlight the Questions and Tasks"
  },
  {
    "objectID": "Projects/project2.html#elevator-pitch",
    "href": "Projects/project2.html#elevator-pitch",
    "title": "Client Report - Project 2",
    "section": "",
    "text": "paste your elevator pitch here A SHORT (4-5 SENTENCES) PARAGRAPH THAT DESCRIBES KEY INSIGHTS TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS.\n\n\nRead and format project data\n# Include and execute your code here\ndf = pd.read_json(\"https://raw.githubusercontent.com/byuidatascience/data4missing/master/data-raw/flights_missing/flights_missing.json\")\n\n\nHighlight the Questions and Tasks"
  },
  {
    "objectID": "Projects/project2.html#questiontask-1",
    "href": "Projects/project2.html#questiontask-1",
    "title": "Client Report - Project 2",
    "section": "QUESTION|TASK 1",
    "text": "QUESTION|TASK 1\nFix all of the varied missing data types in the data to be consistent (all missing values should be displayed as “NaN”). In your report include one record example (one row) from your new data, in the raw JSON format. Your example should display the “NaN” for at least one missing value.\ntype your results and analysis here\n\n\nRead and format data\n# Include and execute your code here\n# df.head(25)\ndf.head(20)\n# null = pd.isnull(df).sum()\n# null\n\n\n\n\n\n\n\n\n\nairport_code\nairport_name\nmonth\nyear\nnum_of_flights_total\nnum_of_delays_carrier\nnum_of_delays_late_aircraft\nnum_of_delays_nas\nnum_of_delays_security\nnum_of_delays_weather\nnum_of_delays_total\nminutes_delayed_carrier\nminutes_delayed_late_aircraft\nminutes_delayed_nas\nminutes_delayed_security\nminutes_delayed_weather\nminutes_delayed_total\n\n\n\n\n0\nATL\nAtlanta, GA: Hartsfield-Jackson Atlanta Intern...\nJanuary\n2005.0\n35048\n1500+\n-999\n4598\n10\n448\n8355\n116423.0\n104415\n207467.0\n297\n36931\n465533\n\n\n1\nDEN\nDenver, CO: Denver International\nJanuary\n2005.0\n12687\n1041\n928\n935\n11\n233\n3153\n53537.0\n70301\n36817.0\n363\n21779\n182797\n\n\n2\nIAD\n\nJanuary\n2005.0\n12381\n414\n1058\n895\n4\n61\n2430\nNaN\n70919\n35660.0\n208\n4497\n134881\n\n\n3\nORD\nChicago, IL: Chicago O'Hare International\nJanuary\n2005.0\n28194\n1197\n2255\n5415\n5\n306\n9178\n88691.0\n160811\n364382.0\n151\n24859\n638894\n\n\n4\nSAN\nSan Diego, CA: San Diego International\nJanuary\n2005.0\n7283\n572\n680\n638\n7\n56\n1952\n27436.0\n38445\n21127.0\n218\n4326\n91552\n\n\n5\nSFO\nSan Francisco, CA: San Francisco International\nJanuary\n2005.0\n10274\n798\n733\n1166\n7\n114\n2816\n41570.0\n47705\n60380.0\n247\n7373\n157275\n\n\n6\nSLC\nSalt Lake City, UT: Salt Lake City International\nJanuary\n2005.0\n12000\n817\n564\n864\n13\n270\n2525\n36252.0\n30557\n35977.0\n327\n27219\n130332\n\n\n7\nATL\nAtlanta, GA: Hartsfield-Jackson Atlanta Intern...\nFebuary\n2005.0\n33702\n1288\n-999\n6104\n2\n399\n9195\n86876.0\n86698\n321969.0\n36\n31944\n527523\n\n\n8\nDEN\nDenver, CO: Denver International\nFebuary\n2005.0\n11480\n729\n432\n581\n4\n42\n1788\n33205.0\n26228\n16864.0\n271\n2781\n79349\n\n\n9\nIAD\nWashington, DC: Washington Dulles International\nFebuary\n2005.0\n10042\n284\n631\n691\n4\n28\n1639\n15573.0\n39840\nNaN\n169\n1359\n78878\n\n\n10\nORD\nChicago, IL: Chicago O'Hare International\nFebuary\n2005.0\n25665\n794\n1222\n3132\n6\n114\n5269\n50136.0\n72868\n164398.0\n208\n7256\n294866\n\n\n11\nSAN\nSan Diego, CA: San Diego International\nFebuary\n2005.0\n6543\n447\n491\n671\n1\n23\n1635\n21755.0\n28887\n20705.0\n44\n1285\n72676\n\n\n12\nSFO\nSan Francisco, CA: San Francisco International\nFebuary\n2005.0\n9327\n599\n457\n1010\n0\n57\n2122\n30760.0\n27302\nNaN\n6\n3178\n110995\n\n\n13\nSLC\n\nFebuary\n2005.0\n12404\n645\n463\n752\n10\n79\n1947\n32336.0\n23087\n24544.0\n293\n4614\n84874\n\n\n14\nATL\nAtlanta, GA: Hartsfield-Jackson Atlanta Intern...\nMarch\n2005.0\n37806\n1462\n-999\n5697\n11\n423\n9431\nNaN\n150766\n396191.0\n568\n33379\n691887\n\n\n15\nDEN\nDenver, CO: Denver International\nMarch\n2005.0\n12979\n852\n586\n530\n9\n85\n2062\n40782.0\n35283\n15775.0\n351\n5265\n97456\n\n\n16\nIAD\nWashington, DC: Washington Dulles International\nMarch\n2005.0\n11249\n372\n724\n777\n5\n43\n1921\n20587.0\n53667\n27186.0\n459\n3505\n105404\n\n\n17\nORD\nChicago, IL: Chicago O'Hare International\nMarch\n2005.0\n28785\n1026\n1665\n3686\n9\n159\n6544\n65241.0\n103993\n178333.0\n457\n11672\n359696\n\n\n18\nSAN\nSan Diego, CA: San Diego International\nMarch\n2005.0\n7298\n464\n489\n343\n3\n27\n1324\n19643.0\n24033\n9515.0\n112\n1323\n54626\n\n\n19\nSFO\nSan Francisco, CA: San Francisco International\nMarch\n2005.0\n10532\n714\n455\n923\n3\n54\n2148\n35374.0\n27922\n51401.0\n118\n3802\n118617\n\n\n\n\n\n\n\n\n\nCode\n# shows me what columns have values that are different that the rest\nmissing_values = [-999, \"\", 'n/a', np.NaN]\nmissing = df.isin(missing_values).sum()\nmissing\n\n\nairport_code                      0\nairport_name                     56\nmonth                            27\nyear                             23\nnum_of_flights_total              0\nnum_of_delays_carrier             0\nnum_of_delays_late_aircraft      40\nnum_of_delays_nas                 0\nnum_of_delays_security            0\nnum_of_delays_weather             0\nnum_of_delays_total               0\nminutes_delayed_carrier          52\nminutes_delayed_late_aircraft     0\nminutes_delayed_nas              48\nminutes_delayed_security          0\nminutes_delayed_weather           0\nminutes_delayed_total             0\ndtype: int64\n\n\n\n\nCode\nmissing = df.isin(missing_values)\nfill_nan_df = df.mask(missing, \"NaN\")\nfill_nan_df\n\n\n\n\n\n\n\n\n\nairport_code\nairport_name\nmonth\nyear\nnum_of_flights_total\nnum_of_delays_carrier\nnum_of_delays_late_aircraft\nnum_of_delays_nas\nnum_of_delays_security\nnum_of_delays_weather\nnum_of_delays_total\nminutes_delayed_carrier\nminutes_delayed_late_aircraft\nminutes_delayed_nas\nminutes_delayed_security\nminutes_delayed_weather\nminutes_delayed_total\n\n\n\n\n0\nATL\nAtlanta, GA: Hartsfield-Jackson Atlanta Intern...\nJanuary\n2005.0\n35048\n1500+\nNaN\n4598\n10\n448\n8355\n116423.0\n104415\n207467.0\n297\n36931\n465533\n\n\n1\nDEN\nDenver, CO: Denver International\nJanuary\n2005.0\n12687\n1041\n928\n935\n11\n233\n3153\n53537.0\n70301\n36817.0\n363\n21779\n182797\n\n\n2\nIAD\nNaN\nJanuary\n2005.0\n12381\n414\n1058\n895\n4\n61\n2430\nNaN\n70919\n35660.0\n208\n4497\n134881\n\n\n3\nORD\nChicago, IL: Chicago O'Hare International\nJanuary\n2005.0\n28194\n1197\n2255\n5415\n5\n306\n9178\n88691.0\n160811\n364382.0\n151\n24859\n638894\n\n\n4\nSAN\nSan Diego, CA: San Diego International\nJanuary\n2005.0\n7283\n572\n680\n638\n7\n56\n1952\n27436.0\n38445\n21127.0\n218\n4326\n91552\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n919\nIAD\nWashington, DC: Washington Dulles International\nDecember\n2015.0\n2799\n182\n183\n61\n0\n17\n443\nNaN\n15438\n2826.0\n0\n1825\n31164\n\n\n920\nORD\nChicago, IL: Chicago O'Hare International\nDecember\n2015.0\n25568\n923\n1755\n1364\n11\n180\n4233\n80962.0\n132055\n72045.0\n435\n22459\n307956\n\n\n921\nSAN\nSan Diego, CA: San Diego International\nNaN\n2015.0\n6231\n480\n606\n256\n5\n37\n1383\n25402.0\n35796\n9038.0\n161\n2742\n73139\n\n\n922\nSFO\nSan Francisco, CA: San Francisco International\nDecember\n2015.0\n13833\n757\n1180\n2372\n9\n147\n4465\n55283.0\n96703\n193525.0\n285\n13788\n359584\n\n\n923\nSLC\nSalt Lake City, UT: Salt Lake City International\nDecember\n2015.0\n8804\n483\n796\n404\n5\n56\n1745\n37354.0\n49549\n13515.0\n158\n6693\n107269\n\n\n\n\n924 rows × 17 columns\n\n\n\ninclude figures in chunks and discuss your findings in the figure.\n\n\ntable example\n# Include and execute your code here\nmydat = fill_nan_df.head(1)\n\njson_data = mydat.to_json()\njson_data\n\n\n'{\"airport_code\":{\"0\":\"ATL\"},\"airport_name\":{\"0\":\"Atlanta, GA: Hartsfield-Jackson Atlanta International\"},\"month\":{\"0\":\"January\"},\"year\":{\"0\":2005.0},\"num_of_flights_total\":{\"0\":35048},\"num_of_delays_carrier\":{\"0\":\"1500+\"},\"num_of_delays_late_aircraft\":{\"0\":\"NaN\"},\"num_of_delays_nas\":{\"0\":4598},\"num_of_delays_security\":{\"0\":10},\"num_of_delays_weather\":{\"0\":448},\"num_of_delays_total\":{\"0\":8355},\"minutes_delayed_carrier\":{\"0\":116423.0},\"minutes_delayed_late_aircraft\":{\"0\":104415},\"minutes_delayed_nas\":{\"0\":207467.0},\"minutes_delayed_security\":{\"0\":297},\"minutes_delayed_weather\":{\"0\":36931},\"minutes_delayed_total\":{\"0\":465533}}'"
  },
  {
    "objectID": "Projects/project2.html#questiontask-2",
    "href": "Projects/project2.html#questiontask-2",
    "title": "Client Report - Project 2",
    "section": "QUESTION|TASK 2",
    "text": "QUESTION|TASK 2\nWhich airport has the worst delays? Discuss the metric you chose, and why you chose it to determine the “worst” airport. Your answer should include a summary table that lists (for each airport) the total number of flights, total number of delayed flights, proportion of delayed flights, and average delay time in hours.\ntype your results and analysis here\n\n\nRead and format data\n# Include and execute your code here\nreplace_nan_df = fill_nan_df\n\n\n\n\nCode\n# replace_nan_df.drop(columns=['airport_name', 'month', 'year'], inplace=True)\n# replace_nan_df = replace_nan_df.query(\"num_of_delays_late_aircraft != 'NaN'\")\n# replace_nan_df.query(\"num_of_flights_total != 'NaN'\", inplace=True)\n\n#select the four columns that are needed\nreplace_nan_df = replace_nan_df.groupby('airport_code').agg({'num_of_flights_total': 'sum', 'num_of_delays_total': 'sum', 'minutes_delayed_total': 'sum'})\n\n#code for new columns\n#total flights delayed divided by total flights\nproportion_of_flights = ((replace_nan_df.num_of_delays_total / replace_nan_df.num_of_flights_total))\n\n#delay time in minutes to hours\naverage_delay_time_hours = (((replace_nan_df.minutes_delayed_total / replace_nan_df.num_of_flights_total) / 60))\n\n#appends new columns\nreplace_nan_df['proportion_of_flights'] = proportion_of_flights\nreplace_nan_df['average_delay_time'] = average_delay_time_hours\nreplace_nan_df\n\n\n\n\n\n\n\n\n\nnum_of_flights_total\nnum_of_delays_total\nminutes_delayed_total\nproportion_of_flights\naverage_delay_time\n\n\nairport_code\n\n\n\n\n\n\n\n\n\nATL\n4430047\n902443\n53983926\n0.203710\n0.203098\n\n\nDEN\n2513974\n468519\n25173381\n0.186366\n0.166890\n\n\nIAD\n851571\n168467\n10283478\n0.197831\n0.201265\n\n\nORD\n3597588\n830825\n56356129\n0.230939\n0.261083\n\n\nSAN\n917862\n175132\n8276248\n0.190804\n0.150281\n\n\nSFO\n1630945\n425604\n26550493\n0.260955\n0.271320\n\n\nSLC\n1403384\n205160\n10123371\n0.146189\n0.120226\n\n\n\n\n\n\n\ninclude figures in chunks and discuss your findings in the figure."
  },
  {
    "objectID": "Projects/project2.html#questiontask-3",
    "href": "Projects/project2.html#questiontask-3",
    "title": "Client Report - Project 2",
    "section": "QUESTION|TASK 3",
    "text": "QUESTION|TASK 3\nWhat is the best month to fly if you want to avoid delays of any length? Discuss the metric you chose and why you chose it to calculate your answer. Include one chart to help support your answer, with the x-axis ordered by month. (To answer this question, you will need to remove any rows that are missing the Month variable.)\ntype your results and analysis here\n\n\nRead and format data\n# Include and execute your code here\n\n#this querys the data and only shows values that are not NaN\ntask_3_df = fill_nan_df\ntask_3_df = task_3_df.query(\"month != 'NaN'\")\ntask_3_df\n\n\n\n\n\n\n\n\n\nairport_code\nairport_name\nmonth\nyear\nnum_of_flights_total\nnum_of_delays_carrier\nnum_of_delays_late_aircraft\nnum_of_delays_nas\nnum_of_delays_security\nnum_of_delays_weather\nnum_of_delays_total\nminutes_delayed_carrier\nminutes_delayed_late_aircraft\nminutes_delayed_nas\nminutes_delayed_security\nminutes_delayed_weather\nminutes_delayed_total\n\n\n\n\n0\nATL\nAtlanta, GA: Hartsfield-Jackson Atlanta Intern...\nJanuary\n2005.0\n35048\n1500+\nNaN\n4598\n10\n448\n8355\n116423.0\n104415\n207467.0\n297\n36931\n465533\n\n\n1\nDEN\nDenver, CO: Denver International\nJanuary\n2005.0\n12687\n1041\n928\n935\n11\n233\n3153\n53537.0\n70301\n36817.0\n363\n21779\n182797\n\n\n2\nIAD\nNaN\nJanuary\n2005.0\n12381\n414\n1058\n895\n4\n61\n2430\nNaN\n70919\n35660.0\n208\n4497\n134881\n\n\n3\nORD\nChicago, IL: Chicago O'Hare International\nJanuary\n2005.0\n28194\n1197\n2255\n5415\n5\n306\n9178\n88691.0\n160811\n364382.0\n151\n24859\n638894\n\n\n4\nSAN\nSan Diego, CA: San Diego International\nJanuary\n2005.0\n7283\n572\n680\n638\n7\n56\n1952\n27436.0\n38445\n21127.0\n218\n4326\n91552\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n918\nDEN\nDenver, CO: Denver International\nDecember\n2015.0\n18001\n1001\n1463\n981\n14\n152\n3610\n64757.0\n111638\n60584.0\n405\n20271\n257655\n\n\n919\nIAD\nWashington, DC: Washington Dulles International\nDecember\n2015.0\n2799\n182\n183\n61\n0\n17\n443\nNaN\n15438\n2826.0\n0\n1825\n31164\n\n\n920\nORD\nChicago, IL: Chicago O'Hare International\nDecember\n2015.0\n25568\n923\n1755\n1364\n11\n180\n4233\n80962.0\n132055\n72045.0\n435\n22459\n307956\n\n\n922\nSFO\nSan Francisco, CA: San Francisco International\nDecember\n2015.0\n13833\n757\n1180\n2372\n9\n147\n4465\n55283.0\n96703\n193525.0\n285\n13788\n359584\n\n\n923\nSLC\nSalt Lake City, UT: Salt Lake City International\nDecember\n2015.0\n8804\n483\n796\n404\n5\n56\n1745\n37354.0\n49549\n13515.0\n158\n6693\n107269\n\n\n\n\n897 rows × 17 columns\n\n\n\n\n\nCode\n#this groups by the month and aggregates the minutes delayed total for each month\ntask_3_df = task_3_df.groupby('month').agg({'minutes_delayed_total': 'sum'})\ntask_3_df\n\n\n\n\n\n\n\n\n\nminutes_delayed_total\n\n\nmonth\n\n\n\n\n\nApril\n13667654\n\n\nAugust\n16906565\n\n\nDecember\n18821267\n\n\nFebuary\n14753955\n\n\nJanuary\n16152667\n\n\nJuly\n20465456\n\n\nJune\n20338750\n\n\nMarch\n14942262\n\n\nMay\n13637705\n\n\nNovember\n11112089\n\n\nOctober\n13109792\n\n\nSeptember\n11495811\n\n\n\n\n\n\n\n\n\nCode\n#this moves the month from being the index to being a normal column\ntask_3_df.reset_index(inplace=True)\ntask_3_df\n\n\n\n\n\n\n\n\n\nmonth\nminutes_delayed_total\n\n\n\n\n0\nApril\n13667654\n\n\n1\nAugust\n16906565\n\n\n2\nDecember\n18821267\n\n\n3\nFebuary\n14753955\n\n\n4\nJanuary\n16152667\n\n\n5\nJuly\n20465456\n\n\n6\nJune\n20338750\n\n\n7\nMarch\n14942262\n\n\n8\nMay\n13637705\n\n\n9\nNovember\n11112089\n\n\n10\nOctober\n13109792\n\n\n11\nSeptember\n11495811\n\n\n\n\n\n\n\n\n\nCode\n#this replaces the incorrect string spelling for FEBUARY as FEBRUARY\ntask_3_df['month'].replace('Febuary', 'February', inplace=True)\ntask_3_df\n\n\n\n\n\n\n\n\n\nmonth\nminutes_delayed_total\n\n\n\n\n0\nApril\n13667654\n\n\n1\nAugust\n16906565\n\n\n2\nDecember\n18821267\n\n\n3\nFebruary\n14753955\n\n\n4\nJanuary\n16152667\n\n\n5\nJuly\n20465456\n\n\n6\nJune\n20338750\n\n\n7\nMarch\n14942262\n\n\n8\nMay\n13637705\n\n\n9\nNovember\n11112089\n\n\n10\nOctober\n13109792\n\n\n11\nSeptember\n11495811\n\n\n\n\n\n\n\n\n\nCode\n#this is supposed to order the months in the correct order\n\n# month_order = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\n# task_3_df['month'] = task_3_df['month'].astype('category')\n\n# task_3_df['month'] = task_3_df['month'].cat.set_categories(month_order, ordered=True)\n\n# task_3_df['month'] = pd.Categorical(task_3_df['month'], categories=month_order, ordered=True)\n\ntask_3_df = task_3_df.sort_values(by='month')\ntask_3_df\n\n\n\n\n\n\n\n\n\nmonth\nminutes_delayed_total\n\n\n\n\n0\nApril\n13667654\n\n\n1\nAugust\n16906565\n\n\n2\nDecember\n18821267\n\n\n3\nFebruary\n14753955\n\n\n4\nJanuary\n16152667\n\n\n5\nJuly\n20465456\n\n\n6\nJune\n20338750\n\n\n7\nMarch\n14942262\n\n\n8\nMay\n13637705\n\n\n9\nNovember\n11112089\n\n\n10\nOctober\n13109792\n\n\n11\nSeptember\n11495811\n\n\n\n\n\n\n\ninclude figures in chunks and discuss your findings in the figure."
  },
  {
    "objectID": "Projects/project2.html#questiontask-4",
    "href": "Projects/project2.html#questiontask-4",
    "title": "Client Report - Project 2",
    "section": "QUESTION|TASK 4",
    "text": "QUESTION|TASK 4\nAccording to the BTS website, the “Weather” category only accounts for severe weather delays. Mild weather delays are not counted in the “Weather” category, but are actually included in both the “NAS” and “Late-Arriving Aircraft” categories. Your job is to create a new column that calculates the total number of flights delayed by weather (both severe and mild). You will need to replace all the missing values in the Late Aircraft variable with the mean. Show your work by printing the first 5 rows of data in a table. Use these three rules for your calculations:\n100% of delayed flights in the Weather category are due to weather\n30% of all delayed flights in the Late-Arriving category are due to weather.\nFrom April to August, 40% of delayed flights in the NAS category are due to weather. The rest of the months, the proportion rises to 65%.\ntype your results and analysis here\n\n\nRead and format data\n# Include and execute your code here\n\n\n\n\nweather = (df.assign(\n    severe = df.num_of_delays_weather, # no missing\n    nodla_nona = lambda x: (x.num_of_delays_late_aircraft\n        .replace(-999, np.nan)), #missing is -999\n    mild_late = lambda x: x.nodla_nona.fillna(x.nodla_nona.mean())*0.3,\n    mild = np.where(\n        df.month.isin(['April', 'May', 'June', 'July', 'August']), \n            df.num_of_delays_nas*0.4,\n            df.num_of_delays_nas*0.65),\n    weather = lambda x: x.severe + x.mild_late + x.mild,\n    proportion_weather_delay = lambda x: x.weather / x.num_of_delays_total,\n    proportion_weather_total = lambda x:  x.weather / x.num_of_flights_total)\n    .filter(['airport_code','month','year', 'severe','mild', 'mild_late',\n    'weather', 'proportion_weather_total', \n    'proportion_weather_delay', 'num_of_flights_total', 'num_of_delays_total']))\nweather.head()\n\n\n\n\n\n\n\n\n\nairport_code\nmonth\nyear\nsevere\nmild\nmild_late\nweather\nproportion_weather_total\nproportion_weather_delay\nnum_of_flights_total\nnum_of_delays_total\n\n\n\n\n0\nATL\nJanuary\n2005.0\n448\n2988.70\n332.731222\n3769.431222\n0.107551\n0.451159\n35048\n8355\n\n\n1\nDEN\nJanuary\n2005.0\n233\n607.75\n278.400000\n1119.150000\n0.088212\n0.354948\n12687\n3153\n\n\n2\nIAD\nJanuary\n2005.0\n61\n581.75\n317.400000\n960.150000\n0.077550\n0.395123\n12381\n2430\n\n\n3\nORD\nJanuary\n2005.0\n306\n3519.75\n676.500000\n4502.250000\n0.159688\n0.490548\n28194\n9178\n\n\n4\nSAN\nJanuary\n2005.0\n56\n414.70\n204.000000\n674.700000\n0.092640\n0.345645\n7283\n1952\n\n\n\n\n\n\n\ninclude figures in chunks and discuss your findings in the figure."
  },
  {
    "objectID": "Projects/project2.html#questiontask-5",
    "href": "Projects/project2.html#questiontask-5",
    "title": "Client Report - Project 2",
    "section": "QUESTION|TASK 5",
    "text": "QUESTION|TASK 5\nUsing the new weather variable calculated above, create a barplot showing the proportion of all flights that are delayed by weather at each airport. Discuss what you learn from this graph.\ntype your results and analysis here\n\n\nRead and format data\n# Include and execute your code here\naverage_delay_by_airport = weather.groupby('airport_code')['proportion_weather_delay'].mean().reset_index()\n\n\ninclude figures in chunks and discuss your findings in the figure.\n\n\nplot example\n# Include and execute your code here\n\n\nchart = px.bar(average_delay_by_airport.head(6),\n    x=\"airport_code\", \n    y=\"proportion_weather_delay\",\n    title=\"Weather Delay Proportion\"\n)\nchart.show()\n\n\n\n                                                \nMy useless chart"
  },
  {
    "objectID": "ml.html",
    "href": "ml.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "ml.html#title-2-header",
    "href": "ml.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "full_stack.html",
    "href": "full_stack.html",
    "title": "About Me",
    "section": "",
    "text": "Introduction\n\nMy name is Dale McBride, I am from a small town in Wyoming called Otto. I have always been interested in computers and have chosen to study Computer Science.\nI have always been active in Student Council as well as sports my entire life. Basketball is my favorite, but I also liked Football and Track.\nSome of my other interests are hunting and fishing. Generally, if it is outdoors I will like to do it.\n\nMarkDown Basics\n\n\n\n\n Back to top"
  },
  {
    "objectID": "competition.html",
    "href": "competition.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "competition.html#title-2-header",
    "href": "competition.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "cleansing.html",
    "href": "cleansing.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "cleansing.html#title-2-header",
    "href": "cleansing.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "exploration.html",
    "href": "exploration.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "exploration.html#title-2-header",
    "href": "exploration.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "index.html#title-2-header",
    "href": "index.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "Projects/project1.html",
    "href": "Projects/project1.html",
    "title": "Client Report - Project 1",
    "section": "",
    "text": "After analyzing the data some interesting insights developed. Some key insights were that each name has a specific trend that corrosponds with it. The trends seen with names can be related to events that happen. Such as a movie that has been released recently.\n\n\nRead and format project data\n# Include and execute your code here\ndf = pd.read_csv(\"https://raw.githubusercontent.com/byuidatascience/data4names/master/data-raw/names_year/names_year.csv\")\n\n\nHighlight the Questions and Tasks"
  },
  {
    "objectID": "Projects/project1.html#elevator-pitch",
    "href": "Projects/project1.html#elevator-pitch",
    "title": "Client Report - Project 1",
    "section": "",
    "text": "After analyzing the data some interesting insights developed. Some key insights were that each name has a specific trend that corrosponds with it. The trends seen with names can be related to events that happen. Such as a movie that has been released recently.\n\n\nRead and format project data\n# Include and execute your code here\ndf = pd.read_csv(\"https://raw.githubusercontent.com/byuidatascience/data4names/master/data-raw/names_year/names_year.csv\")\n\n\nHighlight the Questions and Tasks"
  },
  {
    "objectID": "Projects/project1.html#questiontask-1",
    "href": "Projects/project1.html#questiontask-1",
    "title": "Client Report - Project 1",
    "section": "QUESTION|TASK 1",
    "text": "QUESTION|TASK 1\nHow does your name at your birth year compare to its use historically?\nMy name usage throughout the years has changed significantly as it nears my birth month. In 1958 is where the name peaked in usage and after that it dropped off significantly. When I was born in 2002 I was only one out of four hundred and ten named Dale that year.\n\n\nplot example\n# Include and execute your code here\nchart = px.line(df.query('name == \"Dale\"'),\n    x=\"year\", \n    y=\"Total\",\n    title = \"Usage of the name Dale\"\n)\nchart.add_annotation(x=1958, y=5735, text=\"Peak in name usgage 1958\", font=dict(size=10), arrowcolor=\"black\")\n\nchart.add_annotation(x=2002, y=410, text=\"My Birth Year 2002\", font=dict(size=10), arrowcolor=\"black\")\n\nchart.show()"
  },
  {
    "objectID": "Projects/project1.html#questiontask-2",
    "href": "Projects/project1.html#questiontask-2",
    "title": "Client Report - Project 1",
    "section": "QUESTION|TASK 2",
    "text": "QUESTION|TASK 2\nIf you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?\nIf I were to guess the age of someone Brittany I would guess the age 34. 1990 is when the most children were named Brittany. Making the age of 34 to be the best option. Ages I would not guess would be 45 or 14 because there are very few children named Brittany at those age points. \n\n\nplot example\n# Include and execute your code here\nchart = px.line(df.query('name == \"Brittany\"'),\n    x=\"year\", \n    y=\"Total\",\n    title = \"Brittany name usage\",\n    \n)\nchart.add_annotation(x=1990, y=32562, text=\"1990\", font=dict(size=10), arrowcolor=\"black\")\n\n\n\nchart.show()"
  },
  {
    "objectID": "Projects/project1.html#questiontask-3",
    "href": "Projects/project1.html#questiontask-3",
    "title": "Client Report - Project 1",
    "section": "QUESTION|TASK 3",
    "text": "QUESTION|TASK 3\nMary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names. What trends do you notice?\nFrom 1920-1960 the name Mary was used a ton compared to the other names. They all collectively have a rise in usage at about 1950. After the year 1950 they all start to diwndle in there usage.\n\n\nplot example\n# Include and execute your code here\nchart = px.line(df.query('name == [\"Mary\", \"Martha\", \"Peter\", \"Paul\"]'),\n    x=\"year\", \n    y=\"Total\",\n    color = 'name',\n    title = 'Name Usage'\n    \n)\n\nchart.show()"
  },
  {
    "objectID": "Projects/project1.html#questiontask-4",
    "href": "Projects/project1.html#questiontask-4",
    "title": "Client Report - Project 1",
    "section": "QUESTION|TASK 4",
    "text": "QUESTION|TASK 4\nThink of a unique name from a famous movie. Plot the usage of that name and see how changes line up with the movie release. Does it look like the movie had an effect on usage?\nTaking a famous name such as Luke from Star Wars we can see that an increase begins to happen in the name usage after the year 1977. 1977 happens to be the same year that the movie for Star Wars came out. Leading me to beleive that there is a corrolation between the two.\n\n\nplot example\n# Include and execute your code here\nchart = px.bar(df.query('name == \"Luke\"'),\n    x=\"year\", \n    y=\"Total\",\n    title = 'Amount of children being named Luke'\n)\nchart.add_annotation(x=1977, y=1250, text=\"1977\", font=dict(size=14), arrowcolor=\"black\")\n\nchart.show()"
  },
  {
    "objectID": "Projects/project3.html",
    "href": "Projects/project3.html",
    "title": "Client Report - Project 3",
    "section": "",
    "text": "paste your elevator pitch here A SHORT (4-5 SENTENCES) PARAGRAPH THAT DESCRIBES KEY INSIGHTS TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS.\n\n\nRead and format project data\n# Include and execute your code here\nconn = sqlite3.connect(\"C:\\\\Users\\\\dlmcb\\\\OneDrive\\\\Documents\\\\GitHub\\\\school_work\\\\ds250\\\\testing\\\\lahmansbaseballdb.sqlite\")\n\n\nHighlight the Questions and Tasks"
  },
  {
    "objectID": "Projects/project3.html#elevator-pitch",
    "href": "Projects/project3.html#elevator-pitch",
    "title": "Client Report - Project 3",
    "section": "",
    "text": "paste your elevator pitch here A SHORT (4-5 SENTENCES) PARAGRAPH THAT DESCRIBES KEY INSIGHTS TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS.\n\n\nRead and format project data\n# Include and execute your code here\nconn = sqlite3.connect(\"C:\\\\Users\\\\dlmcb\\\\OneDrive\\\\Documents\\\\GitHub\\\\school_work\\\\ds250\\\\testing\\\\lahmansbaseballdb.sqlite\")\n\n\nHighlight the Questions and Tasks"
  },
  {
    "objectID": "Projects/project3.html#questiontask-1",
    "href": "Projects/project3.html#questiontask-1",
    "title": "Client Report - Project 3",
    "section": "QUESTION|TASK 1",
    "text": "QUESTION|TASK 1\nWrite an SQL query to create a new dataframe about baseball players who attended BYU-Idaho. The new table should contain five columns: playerID, schoolID, salary, and the yearID/teamID associated with each salary. Order the table by salary (highest to lowest) and print out the table in your report.\ntype your results and analysis here\n\ninclude figures in chunks and discuss your findings in the figure."
  },
  {
    "objectID": "Projects/project3.html#questiontask-2",
    "href": "Projects/project3.html#questiontask-2",
    "title": "Client Report - Project 3",
    "section": "QUESTION|TASK 2",
    "text": "QUESTION|TASK 2\n__This three-part question requires you to calculate batting average (number of hits divided by the number of at-bats)\nWrite an SQL query that provides playerID, yearID, and batting average for players with at least 1 at bat that year. Sort the table from highest batting average to lowest, and then by playerid alphabetically. Show the top 5 results in your report.\nUse the same query as above, but only include players with at least 10 at bats that year. Print the top 5 results.\nNow calculate the batting average for players over their entire careers (all years combined). Only include players with at least 100 at bats, and print the top 5 results.__\ntype your results and analysis here\n\ninclude figures in chunks and discuss your findings in the figure."
  },
  {
    "objectID": "Projects/project3.html#questiontask-3",
    "href": "Projects/project3.html#questiontask-3",
    "title": "Client Report - Project 3",
    "section": "QUESTION|TASK 3",
    "text": "QUESTION|TASK 3\nPick any two baseball teams and compare them using a metric of your choice (average salary, home runs, number of wins, etc). Write an SQL query to get the data you need, then make a graph using Plotly Express to visualize the comparison. What do you learn?\ntype your results and analysis here\n\ninclude figures in chunks and discuss your findings in the figure."
  },
  {
    "objectID": "Projects/project5.html",
    "href": "Projects/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "paste your elevator pitch here A SHORT (4-5 SENTENCES) PARAGRAPH THAT DESCRIBES KEY INSIGHTS TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS.\n\nHighlight the Questions and Tasks"
  },
  {
    "objectID": "Projects/project5.html#elevator-pitch",
    "href": "Projects/project5.html#elevator-pitch",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "paste your elevator pitch here A SHORT (4-5 SENTENCES) PARAGRAPH THAT DESCRIBES KEY INSIGHTS TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS.\n\nHighlight the Questions and Tasks"
  },
  {
    "objectID": "Projects/project5.html#questiontask-1",
    "href": "Projects/project5.html#questiontask-1",
    "title": "Client Report - [Insert Project Title]",
    "section": "QUESTION|TASK 1",
    "text": "QUESTION|TASK 1\nCOPY PASTE QUESTION|TASK 1 FROM THE PROJECT HERE\ntype your results and analysis here\n\ninclude figures in chunks and discuss your findings in the figure."
  },
  {
    "objectID": "Projects/project5.html#questiontask-2",
    "href": "Projects/project5.html#questiontask-2",
    "title": "Client Report - [Insert Project Title]",
    "section": "QUESTION|TASK 2",
    "text": "QUESTION|TASK 2\nCOPY PASTE QUESTION|TASK 2 FROM THE PROJECT HERE\ntype your results and analysis here\n\ninclude figures in chunks and discuss your findings in the figure."
  },
  {
    "objectID": "Projects/project5.html#questiontask-3",
    "href": "Projects/project5.html#questiontask-3",
    "title": "Client Report - [Insert Project Title]",
    "section": "QUESTION|TASK 3",
    "text": "QUESTION|TASK 3\nCOPY PASTE QUESTION|TASK 3 FROM THE PROJECT HERE\ntype your results and analysis here\n\ninclude figures in chunks and discuss your findings in the figure."
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Dale McBride’s CV",
    "section": "",
    "text": "Computer Science, Life Learner.\n\ndalemcbride129@gmail.com | My Github page\n\n\n\n\nA Student at Brigham Young University Idaho\n\n\n\n\n2023-now Computer Science Degree\n2023 - now Business Minor\n2017-2021 High School Diploma\n\n\n\nHonor Society\n\nI met the academic requirements to be apart of the Honor Society\n\nAll State Basketball 2020-2021 All Conference Football 2020 Student Council Vice President - In this role I was asked to help organize trips and activities that we wanted to do at school.\n\n\n\nJuly 2023 - August 2023 Philpott Farm and Sawmill, Otto, WY\n\nFarm Hand\nI managed and took care of farm land and other tasks that were given to me.\n\nJune 2020 - August 2020 Meeteetse School, Meeteetse, WY\n\nMainenance Worker\nI maintained or cleaned the different systems and facilities that were on the campus."
  },
  {
    "objectID": "resume.html#currently",
    "href": "resume.html#currently",
    "title": "Dale McBride’s CV",
    "section": "",
    "text": "A Student at Brigham Young University Idaho"
  },
  {
    "objectID": "resume.html#education",
    "href": "resume.html#education",
    "title": "Dale McBride’s CV",
    "section": "",
    "text": "2023-now Computer Science Degree\n2023 - now Business Minor\n2017-2021 High School Diploma"
  },
  {
    "objectID": "resume.html#awardsinvolvement",
    "href": "resume.html#awardsinvolvement",
    "title": "Dale McBride’s CV",
    "section": "",
    "text": "Honor Society\n\nI met the academic requirements to be apart of the Honor Society\n\nAll State Basketball 2020-2021 All Conference Football 2020 Student Council Vice President - In this role I was asked to help organize trips and activities that we wanted to do at school."
  },
  {
    "objectID": "resume.html#previous-employment",
    "href": "resume.html#previous-employment",
    "title": "Dale McBride’s CV",
    "section": "",
    "text": "July 2023 - August 2023 Philpott Farm and Sawmill, Otto, WY\n\nFarm Hand\nI managed and took care of farm land and other tasks that were given to me.\n\nJune 2020 - August 2020 Meeteetse School, Meeteetse, WY\n\nMainenance Worker\nI maintained or cleaned the different systems and facilities that were on the campus."
  }
]