---
title: "Client Report - [Insert Project Title]"
subtitle: "Course DS 250"
author: "[STUDENT NAME]"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
#| label: libraries
#| include: false
import pandas as pd
import numpy as np
import plotly.express as px
```

```{python}
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import tree
from sklearn import metrics
```


## Elevator pitch

_paste your elevator pitch here_
_A SHORT (4-5 SENTENCES) PARAGRAPH THAT `DESCRIBES KEY INSIGHTS` TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS._

```{python}
#| label: project data
#| code-summary: Read and format project data
# Include and execute your code here
df = pd.read_csv("https://raw.githubusercontent.com/byuidatascience/data4dwellings/master/data-raw/dwellings_ml/dwellings_ml.csv")
 ```

__Highlight the Questions and Tasks__

## QUESTION|TASK 1

__Create 2-3 charts that evaluate potential relationships between the home variables and before1980. Explain what you learn from the charts that could help a machine learning algorithm.__

_type your results and analysis here_

```{python}
#| label: Q1
#| code-summary: Read and format data
# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: Q1 chart 1
#| code-summary: plot example
#| fig-align: center
# Include and execute your code here
subset = df.filter(['before1980', 'yrbuilt', 'netprice', 'numbdrm', 'numbaths', 'nocars'])

subset['color'] = subset['before1980'].apply(lambda x: 'Before 1980' if x else 'After 1980')

color_map_labels = {'Before 1980': 'blue', 'After 1980': 'red'}

chart = px.scatter(subset,
    title='Relationship Between House Price and Garage Capacity',
    x="nocars", 
    y="netprice",
    color="color",
    color_discrete_map=color_map_labels
)

chart.update_layout(
    xaxis_title="Capacity of the Garage in Terms of Car Storage",
    yaxis_title="Price of the Property"
)

chart.show()
```


```{python}
#| label: Q1 chart 2
#| code-summary: plot example
#| fig-align: center
# Include and execute your code here

subset = df.filter(['before1980', 'yrbuilt', 'netprice', 'numbdrm', 'numbaths', 'nocars'])

subset['color'] = subset['before1980'].apply(lambda x: 'Before 1980' if x else 'After 1980')

color_map_labels = {'Before 1980': 'blue', 'After 1980': 'red'}

chart = px.scatter(subset,
    title="Comparing Bathroom Count and Build Year",
    x="yrbuilt", 
    y="numbaths",
    color="color",
    color_discrete_map=color_map_labels

)

chart.update_layout(
    xaxis_title="Year Built",
    yaxis_title="Number of Bathrooms"
)

chart.show()
```


## QUESTION|TASK 2

__Build a classification model labeling houses as being built “before 1980” or “during or after 1980”. Your goal is to reach or exceed 90% accuracy. Explain your final model choice (algorithm, tuning parameters, etc) and describe what other models you tried.__

_type your results and analysis here_

```{python}
#| label: Q2
#| code-summary: Read and format data
# Include and execute your code here

X_pred = df.drop(df.filter(regex = 'before1980|yrbuilt|parcel').columns, axis = 1)

y_pred = df.filter(regex = "before1980")

X_train, X_test, y_train, y_test = train_test_split(
    X_pred, y_pred, test_size = .34, random_state = 76)
#3 things it doesn't work well with yrbuilt, before1980, parcel

```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: chart
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X_train, y_train)
y_pred = clf.predict(X_test)
y_probs = clf.predict_proba(X_test)
```

```{python}
print(metrics.classification_report(y_test, y_pred))
```



## QUESTION|TASK 3

__Justify your classification model by discussing the most important features selected by your model. This discussion should include a chart and a description of the features.__

_type your results and analysis here_ 

```{python}
#| label: Q3
#| code-summary: Read and format data
# Include and execute your code here

```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: Q3 feature imporatnce chart!!!!
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
chart = px.bar(df.head(200),
    x="name", 
    y="AK"
)
chart.show()
```


## QUESTION|TASK 4

__Describe the quality of your classification model using 2-3 different evaluation metrics. You also need to explain how to interpret each of the evaluation metrics you use.__

_type your results and analysis here_

```{python}
#| label: Q4
#| code-summary: Read and format data
# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: Q4 chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
chart = px.bar(df.head(200),
    x="name", 
    y="AK"
)
chart.show()
```
